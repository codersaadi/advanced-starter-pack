// THIS FILE IS AUTOGENERATED. DO NOT EDIT MANUALLY.
// Run the generation script to regenerate.

export interface Oauth {
  consent: {
    buttons: {
      accept: string;
      deny: string;
    };
    description: string;
    error: {
      sessionInvalid: {
        message: string;
        title: string;
      };
      title: string;
      unsupportedInteraction: {
        message: string;
        title: string;
      };
    };
    permissionsTitle: string;
    redirectUri: string;
    scope: {
      email: string;
      offline_access: string;
      openid: string;
      profile: string;
      'sync-read': string;
      'sync-write': string;
    };
    title: string;
  };
  failed: {
    backToHome: string;
    subTitle: string;
    title: string;
  };
  handoff: {
    desc: {
      processing: string;
      success: string;
    };
    title: {
      processing: string;
      success: string;
    };
  };
  login: {
    button: string;
    description: string;
    title: string;
    userWelcome: string;
  };
  success: {
    subTitle: string;
    title: string;
  };
}

export interface Error {
  clerkAuth: {
    loginSuccess: {
      action: string;
      desc: string;
      title: string;
    };
  };
  error: {
    backHome: string;
    desc: string;
    retry: string;
    title: string;
  };
  fetchError: {
    detail: string;
    title: string;
  };
  import: {
    importConfigFile: {
      description: string;
      title: string;
    };
    incompatible: {
      description: string;
      title: string;
    };
  };
  loginRequired: {
    desc: string;
    title: string;
  };
  notFound: {
    backHome: string;
    check: string;
    desc: string;
    title: string;
  };
  pluginSettings: {
    desc: string;
    title: string;
  };
  response: {
    '400': string;
    '401': string;
    '403': string;
    '404': string;
    '405': string;
    '406': string;
    '407': string;
    '408': string;
    '409': string;
    '410': string;
    '411': string;
    '412': string;
    '413': string;
    '414': string;
    '415': string;
    '416': string;
    '417': string;
    '422': string;
    '423': string;
    '424': string;
    '426': string;
    '428': string;
    '429': string;
    '431': string;
    '451': string;
    '499': string;
    '500': string;
    '501': string;
    '502': string;
    '503': string;
    '504': string;
    '505': string;
    '506': string;
    '507': string;
    '509': string;
    '510': string;
    '520': string;
    '522': string;
    '524': string;
    AgentRuntimeError: string;
    ConnectionCheckFailed: string;
    CreateMessageError: string;
    ExceededContextWindow: string;
    FreePlanLimit: string;
    InsufficientQuota: string;
    InvalidAccessCode: string;
    InvalidBedrockCredentials: string;
    InvalidClerkUser: string;
    InvalidGithubToken: string;
    InvalidOllamaArgs: string;
    InvalidProviderAPIKey: string;
    InvalidVertexCredentials: string;
    LocationNotSupportError: string;
    ModelNotFound: string;
    NoOpenAIAPIKey: string;
    OllamaBizError: string;
    OllamaServiceUnavailable: string;
    PermissionDenied: string;
    PluginApiNotFound: string;
    PluginApiParamsError: string;
    PluginFailToTransformArguments: string;
    PluginGatewayError: string;
    PluginManifestInvalid: string;
    PluginManifestNotFound: string;
    PluginMarketIndexInvalid: string;
    PluginMarketIndexNotFound: string;
    PluginMetaInvalid: string;
    PluginMetaNotFound: string;
    PluginOpenApiInitError: string;
    PluginServerError: string;
    PluginSettingsInvalid: string;
    ProviderBizError: string;
    QuotaLimitReached: string;
    StreamChunkError: string;
    SubscriptionKeyMismatch: string;
    SubscriptionPlanLimit: string;
    SystemTimeNotMatchError: string;
    UnknownChatFetchError: string;
  };
  stt: {
    responseError: string;
  };
  tts: {
    responseError: string;
  };
  unlock: {
    addProxyUrl: string;
    apiKey: {
      description: string;
      title: string;
    };
    closeMessage: string;
    confirm: string;
    oauth: {
      description: string;
      success: string;
      title: string;
      welcome: string;
    };
    password: {
      description: string;
      placeholder: string;
      title: string;
    };
    tabs: {
      apiKey: string;
      password: string;
    };
  };
  upload: {
    desc: string;
    fileOnlySupportInServerMode: string;
    networkError: string;
    title: string;
    unknownError: string;
    uploadFailed: string;
  };
}

export interface Common {
  about: string;
  advanceSettings: string;
  alert: {
    cloud: {
      action: string;
      desc: string;
      descOnMobile: string;
      title: string;
    };
  };
  appLoading: {
    appIdle: string;
    appInitializing: string;
    failed: string;
    finished: string;
    goToChat: string;
    initAuth: string;
    initUser: string;
    initializing: string;
    loadingDependencies: string;
    loadingWasm: string;
    migrating: string;
    ready: string;
    showDetail: string;
  };
  autoGenerate: string;
  autoGenerateTooltip: string;
  autoGenerateTooltipDisabled: string;
  back: string;
  batchDelete: string;
  blog: string;
  branching: string;
  branchingDisable: string;
  cancel: string;
  changelog: string;
  clientDB: {
    autoInit: {
      title: string;
    };
    error: {
      desc: string;
      detail: string;
      detailTitle: string;
      report: string;
      retry: string;
      selfSolve: string;
      title: string;
    };
    initing: {
      error: string;
      idle: string;
      initializing: string;
      loadingDependencies: string;
      loadingWasmModule: string;
      migrating: string;
      ready: string;
    };
    modal: {
      desc: string;
      enable: string;
      features: {
        knowledgeBase: {
          desc: string;
          title: string;
        };
        localFirst: {
          desc: string;
          title: string;
        };
        pglite: {
          desc: string;
          title: string;
        };
      };
      init: {
        desc: string;
        title: string;
      };
      title: string;
    };
    ready: {
      button: string;
      desc: string;
      title: string;
    };
    solve: {
      backup: {
        backup: string;
        backupSuccess: string;
        desc: string;
        export: string;
        exportDesc: string;
        reset: {
          alert: string;
          alertDesc: string;
          button: string;
          confirm: {
            desc: string;
            title: string;
          };
          desc: string;
          title: string;
        };
        restore: string;
        restoreSuccess: string;
        title: string;
      };
      diagnosis: {
        createdAt: string;
        migratedAt: string;
        sql: string;
        title: string;
      };
      repair: {
        desc: string;
        runSQL: string;
        sql: {
          clear: string;
          desc: string;
          markFinished: string;
          placeholder: string;
          result: string;
          run: string;
          title: string;
        };
        title: string;
      };
      tabs: {
        backup: string;
        diagnosis: string;
        repair: string;
      };
    };
  };
  close: string;
  contact: string;
  copy: string;
  copyFail: string;
  copySuccess: string;
  dataStatistics: {
    messages: string;
    sessions: string;
    today: string;
    topics: string;
  };
  defaultAgent: string;
  defaultSession: string;
  delete: string;
  document: string;
  download: string;
  duplicate: string;
  edit: string;
  export: string;
  exportType: {
    agent: string;
    agentWithMessage: string;
    all: string;
    allAgent: string;
    allAgentWithMessage: string;
    globalSetting: string;
  };
  feedback: string;
  follow: string;
  footer: {
    action: {
      feedback: string;
      star: string;
    };
    and: string;
    feedback: {
      action: string;
      desc: string;
      title: string;
    };
    later: string;
    star: {
      action: string;
      desc: string;
      title: string;
    };
    title: string;
  };
  fullscreen: string;
  historyRange: string;
  importData: string;
  importModal: {
    error: {
      desc: string;
      title: string;
    };
    finish: {
      onlySettings: string;
      start: string;
      subTitle: string;
      title: string;
    };
    loading: string;
    preparing: string;
    result: {
      added: string;
      errors: string;
      messages: string;
      sessionGroups: string;
      sessions: string;
      skips: string;
      topics: string;
      type: string;
      update: string;
    };
    title: string;
    uploading: {
      desc: string;
      restTime: string;
      speed: string;
    };
  };
  importPreview: {
    confirmImport: string;
    tables: {
      count: string;
      name: string;
    };
    title: string;
    totalRecords: string;
    totalTables: string;
  };
  information: string;
  installPWA: string;
  lang: {
    ar: string;
    'bg-BG': string;
    bn: string;
    'cs-CZ': string;
    'da-DK': string;
    'de-DE': string;
    'el-GR': string;
    en: string;
    'en-US': string;
    'es-ES': string;
    'fa-IR': string;
    'fi-FI': string;
    'fr-FR': string;
    'hi-IN': string;
    'hu-HU': string;
    'id-ID': string;
    'it-IT': string;
    'ja-JP': string;
    'ko-KR': string;
    'nl-NL': string;
    'no-NO': string;
    'pl-PL': string;
    'pt-BR': string;
    'pt-PT': string;
    'ro-RO': string;
    'ru-RU': string;
    'sk-SK': string;
    'sr-RS': string;
    'sv-SE': string;
    'th-TH': string;
    'tr-TR': string;
    'uk-UA': string;
    'vi-VN': string;
    zh: string;
    'zh-CN': string;
    'zh-TW': string;
  };
  layoutInitializing: string;
  legal: string;
  loading: string;
  mail: {
    business: string;
    support: string;
  };
  oauth: string;
  officialSite: string;
  ok: string;
  password: string;
  pin: string;
  pinOff: string;
  privacy: string;
  regenerate: string;
  releaseNotes: string;
  rename: string;
  reset: string;
  retry: string;
  run: string;
  save: string;
  send: string;
  setting: string;
  share: string;
  stop: string;
  sync: {
    actions: {
      settings: string;
      sync: string;
    };
    awareness: {
      current: string;
    };
    channel: string;
    disabled: {
      actions: {
        enable: string;
        settings: string;
      };
      desc: string;
      title: string;
    };
    enabled: {
      title: string;
    };
    status: {
      connecting: string;
      disabled: string;
      ready: string;
      synced: string;
      syncing: string;
      unconnected: string;
    };
    title: string;
    unconnected: {
      tip: string;
    };
  };
  tab: {
    chat: string;
    discover: string;
    files: string;
    me: string;
    setting: string;
  };
  telemetry: {
    allow: string;
    deny: string;
    desc: string;
    learnMore: string;
    title: string;
  };
  temp: string;
  terms: string;
  update: string;
  updateAgent: string;
  upgradeVersion: {
    action: string;
    hasNew: string;
    newVersion: string;
  };
  userPanel: {
    anonymousNickName: string;
    billing: string;
    cloud: string;
    community: string;
    data: string;
    defaultNickname: string;
    discord: string;
    docs: string;
    email: string;
    feedback: string;
    help: string;
    moveGuide: string;
    plans: string;
    profile: string;
    setting: string;
    usages: string;
  };
  version: string;
}

export interface Clerk {
  backButton: string;
  badge__default: string;
  badge__otherImpersonatorDevice: string;
  badge__primary: string;
  badge__requiresAction: string;
  badge__thisDevice: string;
  badge__unverified: string;
  badge__userDevice: string;
  badge__you: string;
  createOrganization: {
    formButtonSubmit: string;
    invitePage: {
      formButtonReset: string;
    };
    title: string;
  };
  dates: {
    lastDay: string;
    next6Days: string;
    nextDay: string;
    numeric: string;
    previous6Days: string;
    sameDay: string;
  };
  dividerText: string;
  footerActionLink__useAnotherMethod: string;
  footerPageLink__help: string;
  footerPageLink__privacy: string;
  footerPageLink__terms: string;
  formButtonPrimary: string;
  formButtonPrimary__verify: string;
  formFieldAction__forgotPassword: string;
  formFieldError__matchingPasswords: string;
  formFieldError__notMatchingPasswords: string;
  formFieldError__verificationLinkExpired: string;
  formFieldHintText__optional: string;
  formFieldHintText__slug: string;
  formFieldInputPlaceholder__backupCode: string;
  formFieldInputPlaceholder__confirmDeletionUserAccount: string;
  formFieldInputPlaceholder__emailAddress: string;
  formFieldInputPlaceholder__emailAddress_username: string;
  formFieldInputPlaceholder__emailAddresses: string;
  formFieldInputPlaceholder__firstName: string;
  formFieldInputPlaceholder__lastName: string;
  formFieldInputPlaceholder__organizationDomain: string;
  formFieldInputPlaceholder__organizationDomainEmailAddress: string;
  formFieldInputPlaceholder__organizationName: string;
  formFieldInputPlaceholder__organizationSlug: string;
  formFieldInputPlaceholder__password: string;
  formFieldInputPlaceholder__phoneNumber: string;
  formFieldInputPlaceholder__username: string;
  formFieldLabel__automaticInvitations: string;
  formFieldLabel__backupCode: string;
  formFieldLabel__confirmDeletion: string;
  formFieldLabel__confirmPassword: string;
  formFieldLabel__currentPassword: string;
  formFieldLabel__emailAddress: string;
  formFieldLabel__emailAddress_username: string;
  formFieldLabel__emailAddresses: string;
  formFieldLabel__firstName: string;
  formFieldLabel__lastName: string;
  formFieldLabel__newPassword: string;
  formFieldLabel__organizationDomain: string;
  formFieldLabel__organizationDomainDeletePending: string;
  formFieldLabel__organizationDomainEmailAddress: string;
  formFieldLabel__organizationDomainEmailAddressDescription: string;
  formFieldLabel__organizationName: string;
  formFieldLabel__organizationSlug: string;
  formFieldLabel__passkeyName: string;
  formFieldLabel__password: string;
  formFieldLabel__phoneNumber: string;
  formFieldLabel__role: string;
  formFieldLabel__signOutOfOtherSessions: string;
  formFieldLabel__username: string;
  impersonationFab: {
    action__signOut: string;
    title: string;
  };
  locale: string;
  maintenanceMode: string;
  membershipRole__admin: string;
  membershipRole__basicMember: string;
  membershipRole__guestMember: string;
  organizationList: {
    action__createOrganization: string;
    action__invitationAccept: string;
    action__suggestionsAccept: string;
    createOrganization: string;
    invitationAcceptedLabel: string;
    subtitle: string;
    suggestionsAcceptedLabel: string;
    title: string;
    titleWithoutPersonal: string;
  };
  organizationProfile: {
    badge__automaticInvitation: string;
    badge__automaticSuggestion: string;
    badge__manualInvitation: string;
    badge__unverified: string;
    createDomainPage: {
      subtitle: string;
      title: string;
    };
    invitePage: {
      detailsTitle__inviteFailed: string;
      formButtonPrimary__continue: string;
      selectDropdown__role: string;
      subtitle: string;
      successMessage: string;
      title: string;
    };
    membersPage: {
      action__invite: string;
      activeMembersTab: {
        menuAction__remove: string;
        tableHeader__actions: string;
        tableHeader__joined: string;
        tableHeader__role: string;
        tableHeader__user: string;
      };
      detailsTitle__emptyRow: string;
      invitationsTab: {
        autoInvitations: {
          headerSubtitle: string;
          headerTitle: string;
          primaryButton: string;
        };
        table__emptyRow: string;
      };
      invitedMembersTab: {
        menuAction__revoke: string;
        tableHeader__invited: string;
      };
      requestsTab: {
        autoSuggestions: {
          headerSubtitle: string;
          headerTitle: string;
          primaryButton: string;
        };
        menuAction__approve: string;
        menuAction__reject: string;
        tableHeader__requested: string;
        table__emptyRow: string;
      };
      start: {
        headerTitle__invitations: string;
        headerTitle__members: string;
        headerTitle__requests: string;
      };
    };
    navbar: {
      description: string;
      general: string;
      members: string;
      title: string;
    };
    profilePage: {
      dangerSection: {
        deleteOrganization: {
          actionDescription: string;
          messageLine1: string;
          messageLine2: string;
          successMessage: string;
          title: string;
        };
        leaveOrganization: {
          actionDescription: string;
          messageLine1: string;
          messageLine2: string;
          successMessage: string;
          title: string;
        };
        title: string;
      };
      domainSection: {
        menuAction__manage: string;
        menuAction__remove: string;
        menuAction__verify: string;
        primaryButton: string;
        subtitle: string;
        title: string;
      };
      successMessage: string;
      title: string;
    };
    removeDomainPage: {
      messageLine1: string;
      messageLine2: string;
      successMessage: string;
      title: string;
    };
    start: {
      headerTitle__general: string;
      headerTitle__members: string;
      profileSection: {
        primaryButton: string;
        title: string;
        uploadAction__title: string;
      };
    };
    verifiedDomainPage: {
      dangerTab: {
        calloutInfoLabel: string;
        removeDomainActionLabel__remove: string;
        removeDomainSubtitle: string;
        removeDomainTitle: string;
      };
      enrollmentTab: {
        automaticInvitationOption__description: string;
        automaticInvitationOption__label: string;
        automaticSuggestionOption__description: string;
        automaticSuggestionOption__label: string;
        calloutInfoLabel: string;
        calloutInvitationCountLabel: string;
        calloutSuggestionCountLabel: string;
        manualInvitationOption__description: string;
        manualInvitationOption__label: string;
        subtitle: string;
      };
      start: {
        headerTitle__danger: string;
        headerTitle__enrollment: string;
      };
      subtitle: string;
      title: string;
    };
    verifyDomainPage: {
      formSubtitle: string;
      formTitle: string;
      resendButton: string;
      subtitle: string;
      subtitleVerificationCodeScreen: string;
      title: string;
    };
  };
  organizationSwitcher: {
    action__createOrganization: string;
    action__invitationAccept: string;
    action__manageOrganization: string;
    action__suggestionsAccept: string;
    notSelected: string;
    personalWorkspace: string;
    suggestionsAcceptedLabel: string;
  };
  paginationButton__next: string;
  paginationButton__previous: string;
  paginationRowText__displaying: string;
  paginationRowText__of: string;
  signIn: {
    accountSwitcher: {
      action__addAccount: string;
      action__signOutAll: string;
      subtitle: string;
      title: string;
    };
    alternativeMethods: {
      actionLink: string;
      actionText: string;
      blockButton__backupCode: string;
      blockButton__emailCode: string;
      blockButton__emailLink: string;
      blockButton__passkey: string;
      blockButton__password: string;
      blockButton__phoneCode: string;
      blockButton__totp: string;
      getHelp: {
        blockButton__emailSupport: string;
        content: string;
        title: string;
      };
      subtitle: string;
      title: string;
    };
    backupCodeMfa: {
      subtitle: string;
      title: string;
    };
    emailCode: {
      formTitle: string;
      resendButton: string;
      subtitle: string;
      title: string;
    };
    emailLink: {
      expired: {
        subtitle: string;
        title: string;
      };
      failed: {
        subtitle: string;
        title: string;
      };
      formSubtitle: string;
      formTitle: string;
      loading: {
        subtitle: string;
        title: string;
      };
      resendButton: string;
      subtitle: string;
      title: string;
      unusedTab: {
        title: string;
      };
      verified: {
        subtitle: string;
        title: string;
      };
      verifiedSwitchTab: {
        subtitle: string;
        subtitleNewTab: string;
        titleNewTab: string;
      };
    };
    forgotPassword: {
      formTitle: string;
      resendButton: string;
      subtitle: string;
      subtitle_email: string;
      subtitle_phone: string;
      title: string;
    };
    forgotPasswordAlternativeMethods: {
      blockButton__resetPassword: string;
      label__alternativeMethods: string;
      title: string;
    };
    noAvailableMethods: {
      message: string;
      subtitle: string;
      title: string;
    };
    passkey: {
      subtitle: string;
      title: string;
    };
    password: {
      actionLink: string;
      subtitle: string;
      title: string;
    };
    passwordPwned: {
      title: string;
    };
    phoneCode: {
      formTitle: string;
      resendButton: string;
      subtitle: string;
      title: string;
    };
    phoneCodeMfa: {
      formTitle: string;
      resendButton: string;
      subtitle: string;
      title: string;
    };
    resetPassword: {
      formButtonPrimary: string;
      requiredMessage: string;
      successMessage: string;
      title: string;
    };
    resetPasswordMfa: {
      detailsLabel: string;
    };
    start: {
      actionLink: string;
      actionLink__use_email: string;
      actionLink__use_email_username: string;
      actionLink__use_passkey: string;
      actionLink__use_phone: string;
      actionLink__use_username: string;
      actionText: string;
      subtitle: string;
      title: string;
    };
    totpMfa: {
      formTitle: string;
      subtitle: string;
      title: string;
    };
  };
  signInEnterPasswordTitle: string;
  signUp: {
    continue: {
      actionLink: string;
      actionText: string;
      subtitle: string;
      title: string;
    };
    emailCode: {
      formSubtitle: string;
      formTitle: string;
      resendButton: string;
      subtitle: string;
      title: string;
    };
    emailLink: {
      formSubtitle: string;
      formTitle: string;
      loading: {
        title: string;
      };
      resendButton: string;
      subtitle: string;
      title: string;
      verified: {
        title: string;
      };
      verifiedSwitchTab: {
        subtitle: string;
        subtitleNewTab: string;
        title: string;
      };
    };
    phoneCode: {
      formSubtitle: string;
      formTitle: string;
      resendButton: string;
      subtitle: string;
      title: string;
    };
    start: {
      actionLink: string;
      actionText: string;
      subtitle: string;
      title: string;
    };
  };
  socialButtonsBlockButton: string;
  unstable__errors: {
    captcha_invalid: string;
    captcha_unavailable: string;
    form_code_incorrect: string;
    form_identifier_exists: string;
    form_identifier_exists__email_address: string;
    form_identifier_exists__phone_number: string;
    form_identifier_exists__username: string;
    form_identifier_not_found: string;
    form_param_format_invalid: string;
    form_param_format_invalid__email_address: string;
    form_param_format_invalid__phone_number: string;
    form_param_max_length_exceeded__first_name: string;
    form_param_max_length_exceeded__last_name: string;
    form_param_max_length_exceeded__name: string;
    form_param_nil: string;
    form_password_incorrect: string;
    form_password_length_too_short: string;
    form_password_not_strong_enough: string;
    form_password_pwned: string;
    form_password_pwned__sign_in: string;
    form_password_size_in_bytes_exceeded: string;
    form_password_validation_failed: string;
    form_username_invalid_character: string;
    form_username_invalid_length: string;
    identification_deletion_failed: string;
    not_allowed_access: string;
    passkey_already_exists: string;
    passkey_not_supported: string;
    passkey_pa_not_supported: string;
    passkey_registration_cancelled: string;
    passkey_retrieval_cancelled: string;
    passwordComplexity: {
      maximumLength: string;
      minimumLength: string;
      requireLowercase: string;
      requireNumbers: string;
      requireSpecialCharacter: string;
      requireUppercase: string;
      sentencePrefix: string;
    };
    phone_number_exists: string;
    zxcvbn: {
      couldBeStronger: string;
      goodPassword: string;
      notEnough: string;
      suggestions: {
        allUppercase: string;
        anotherWord: string;
        associatedYears: string;
        capitalization: string;
        dates: string;
        l33t: string;
        longerKeyboardPattern: string;
        noNeed: string;
        pwned: string;
        recentYears: string;
        repeated: string;
        reverseWords: string;
        sequences: string;
        useWords: string;
      };
      warnings: {
        common: string;
        commonNames: string;
        dates: string;
        extendedRepeat: string;
        keyPattern: string;
        namesByThemselves: string;
        pwned: string;
        recentYears: string;
        sequences: string;
        similarToCommon: string;
        simpleRepeat: string;
        straightRow: string;
        topHundred: string;
        topTen: string;
        userInputs: string;
        wordByItself: string;
      };
    };
  };
  userButton: {
    action__addAccount: string;
    action__manageAccount: string;
    action__signOut: string;
    action__signOutAll: string;
  };
  userProfile: {
    backupCodePage: {
      actionLabel__copied: string;
      actionLabel__copy: string;
      actionLabel__download: string;
      actionLabel__print: string;
      infoText1: string;
      infoText2: string;
      subtitle__codelist: string;
      successMessage: string;
      successSubtitle: string;
      title: string;
      title__codelist: string;
    };
    connectedAccountPage: {
      formHint: string;
      formHint__noAccounts: string;
      removeResource: {
        messageLine1: string;
        messageLine2: string;
        successMessage: string;
        title: string;
      };
      socialButtonsBlockButton: string;
      successMessage: string;
      title: string;
    };
    deletePage: {
      actionDescription: string;
      confirm: string;
      messageLine1: string;
      messageLine2: string;
      title: string;
    };
    emailAddressPage: {
      emailCode: {
        formHint: string;
        formSubtitle: string;
        formTitle: string;
        resendButton: string;
        successMessage: string;
      };
      emailLink: {
        formHint: string;
        formSubtitle: string;
        formTitle: string;
        resendButton: string;
        successMessage: string;
      };
      removeResource: {
        messageLine1: string;
        messageLine2: string;
        successMessage: string;
        title: string;
      };
      title: string;
      verifyTitle: string;
    };
    formButtonPrimary__add: string;
    formButtonPrimary__continue: string;
    formButtonPrimary__finish: string;
    formButtonPrimary__remove: string;
    formButtonPrimary__save: string;
    formButtonReset: string;
    mfaPage: {
      formHint: string;
      title: string;
    };
    mfaPhoneCodePage: {
      backButton: string;
      primaryButton__addPhoneNumber: string;
      removeResource: {
        messageLine1: string;
        messageLine2: string;
        successMessage: string;
        title: string;
      };
      subtitle__availablePhoneNumbers: string;
      subtitle__unavailablePhoneNumbers: string;
      successMessage1: string;
      successMessage2: string;
      successTitle: string;
      title: string;
    };
    mfaTOTPPage: {
      authenticatorApp: {
        buttonAbleToScan__nonPrimary: string;
        buttonUnableToScan__nonPrimary: string;
        infoText__ableToScan: string;
        infoText__unableToScan: string;
        inputLabel__unableToScan1: string;
        inputLabel__unableToScan2: string;
      };
      removeResource: {
        messageLine1: string;
        messageLine2: string;
        successMessage: string;
        title: string;
      };
      successMessage: string;
      title: string;
      verifySubtitle: string;
      verifyTitle: string;
    };
    mobileButton__menu: string;
    navbar: {
      account: string;
      description: string;
      security: string;
      title: string;
    };
    passkeyScreen: {
      removeResource: {
        messageLine1: string;
        title: string;
      };
      subtitle__rename: string;
      title__rename: string;
    };
    passwordPage: {
      checkboxInfoText__signOutOfOtherSessions: string;
      readonly: string;
      successMessage__set: string;
      successMessage__signOutOfOtherSessions: string;
      successMessage__update: string;
      title__set: string;
      title__update: string;
    };
    phoneNumberPage: {
      infoText: string;
      removeResource: {
        messageLine1: string;
        messageLine2: string;
        successMessage: string;
        title: string;
      };
      successMessage: string;
      title: string;
      verifySubtitle: string;
      verifyTitle: string;
    };
    profilePage: {
      fileDropAreaHint: string;
      imageFormDestructiveActionSubtitle: string;
      imageFormSubtitle: string;
      imageFormTitle: string;
      readonly: string;
      successMessage: string;
      title: string;
    };
    start: {
      activeDevicesSection: {
        destructiveAction: string;
        title: string;
      };
      connectedAccountsSection: {
        actionLabel__connectionFailed: string;
        actionLabel__reauthorize: string;
        destructiveActionTitle: string;
        primaryButton: string;
        subtitle__reauthorize: string;
        title: string;
      };
      dangerSection: {
        deleteAccountButton: string;
        title: string;
      };
      emailAddressesSection: {
        destructiveAction: string;
        detailsAction__nonPrimary: string;
        detailsAction__primary: string;
        detailsAction__unverified: string;
        primaryButton: string;
        title: string;
      };
      enterpriseAccountsSection: {
        title: string;
      };
      headerTitle__account: string;
      headerTitle__security: string;
      mfaSection: {
        backupCodes: {
          actionLabel__regenerate: string;
          headerTitle: string;
          subtitle__regenerate: string;
          title__regenerate: string;
        };
        phoneCode: {
          actionLabel__setDefault: string;
          destructiveActionLabel: string;
        };
        primaryButton: string;
        title: string;
        totp: {
          destructiveActionTitle: string;
          headerTitle: string;
        };
      };
      passkeysSection: {
        menuAction__destructive: string;
        menuAction__rename: string;
        title: string;
      };
      passwordSection: {
        primaryButton__setPassword: string;
        primaryButton__updatePassword: string;
        title: string;
      };
      phoneNumbersSection: {
        destructiveAction: string;
        detailsAction__nonPrimary: string;
        detailsAction__primary: string;
        detailsAction__unverified: string;
        primaryButton: string;
        title: string;
      };
      profileSection: {
        primaryButton: string;
        title: string;
      };
      usernameSection: {
        primaryButton__setUsername: string;
        primaryButton__updateUsername: string;
        title: string;
      };
      web3WalletsSection: {
        destructiveAction: string;
        primaryButton: string;
        title: string;
      };
    };
    usernamePage: {
      successMessage: string;
      title__set: string;
      title__update: string;
    };
    web3WalletPage: {
      removeResource: {
        messageLine1: string;
        messageLine2: string;
        successMessage: string;
        title: string;
      };
      subtitle__availableWallets: string;
      subtitle__unavailableWallets: string;
      successMessage: string;
      title: string;
    };
  };
}

export interface Changelog {
  actions: {
    followOnX: string;
    subscribeToUpdates: string;
    versions: string;
  };
  addedWhileAway: string;
  allChangelog: string;
  description: string;
  pagination: {
    next: string;
    older: string;
  };
  readDetails: string;
  title: string;
  versionDetails: string;
  welcomeBack: string;
}

export interface Auth {
  date: {
    prevMonth: string;
    recent30Days: string;
  };
  header: {
    desc: string;
    title: string;
  };
  heatmaps: {
    legend: {
      less: string;
      more: string;
    };
    months: {
      apr: string;
      aug: string;
      dec: string;
      feb: string;
      jan: string;
      jul: string;
      jun: string;
      mar: string;
      may: string;
      nov: string;
      oct: string;
      sep: string;
    };
    tooltip: string;
    totalCount: string;
  };
  login: string;
  loginOrSignup: string;
  profile: {
    avatar: string;
    email: string;
    sso: {
      loading: string;
      providers: string;
      unlink: {
        description: string;
        forbidden: string;
        title: string;
      };
    };
    username: string;
  };
  signout: string;
  signup: string;
  stats: {
    createdAt: string;
    empty: {
      desc: string;
      title: string;
    };
    lastYearActivity: string;
    messages: string;
    updatedAt: string;
  };
}

export interface Resources {
  oauth: Oauth;
  error: Error;
  common: Common;
  clerk: Clerk;
  changelog: Changelog;
  auth: Auth;
}
