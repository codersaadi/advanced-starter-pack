# -----------------------------------------------------------------------------
# Main Application Configuration (@repo/env/index.ts)
# -----------------------------------------------------------------------------

# Required for production if NEXT_PUBLIC_SERVICE_MODE=server
# The fully qualified URL of your deployed application.
# Example: https://yourapp.com
# APP_URL=

# Required: Database connection string.
# Example for PostgreSQL: postgresql://user:password@host:port/database
# Example for Neon: postgresql://<user>.<project_id>:<password>@<endpoint_hostname>.neon.tech/dbname?sslmode=require
DATABASE_URL="postgresql://username:password@localhost:5432/dbname"
NEXT_PUBLIC_SERVICE_MODE="server"

# Required: Secret key for NextAuth.js / Auth.js session encryption.
# Generate with `openssl rand -base64 32` or `npx auth secret`
NEXT_AUTH_SECRET="cWuQ6eOxvRXpYFvhg0iWf0afOVKRQYk9YmE0ZVbq0YI="

# Optional: Specify Next.js runtime ('nodejs' or 'edge'). Defaults if not set.
# NEXT_RUNTIME=nodejs

# Node environment. Typically 'development', 'production', or 'test'.
# Next.js sets this automatically based on the command (dev, start, build).
# NODE_ENV=development

# Optional: Redis connection URL for caching or other Redis-dependent features.
# Example: redis://localhost:6379
REDIS_CLIENT=""
# IN_APP_RATE_LIMIT="1" if you have redis for rate limit 

# Optional: Vercel Edge Config connection string if using Vercel Edge Config.
# VERCEL_EDGE_CONFIG="edge_config_connection_string"

# Optional: Set to "1" if deploying on Vercel. Next.js often sets this automatically.
# VERCEL="1"

# Optional: Set to "1" to enable local middleware rewrite for Docker development.
# MIDDLEWARE_REWRITE_THROUGH_LOCAL=0


# -----------------------------------------------------------------------------
# Client-Side Public Configuration (@repo/env/index.ts)
# -----------------------------------------------------------------------------

# Required: The public host URL of your application. Do NOT end with a trailing slash.
# Used for constructing absolute URLs on the client.
# Example: http://localhost:3000 or https://yourapp.com
NEXT_PUBLIC_HOST="http://localhost:3000"

# Optional: Base path for the application if deployed under a sub-path.
# Example: /myapp
NEXT_PUBLIC_BASE_PATH=""


# -----------------------------------------------------------------------------
# Sentry Error Tracking (@repo/env/index.ts & used by Sentry integration)
# -----------------------------------------------------------------------------

# Optional: Sentry DSN for client-side error tracking.
# If set, NEXT_PUBLIC_ENABLE_SENTRY will be true.
# NEXT_PUBLIC_SENTRY_DSN="https://your_dsn@o000000.ingest.sentry.io/0000000"

# Optional: Sentry organization slug (for server-side or build-time Sentry setup).
# SENTRY_ORG="your-sentry-org"

# Optional: Sentry project slug (for server-side or build-time Sentry setup).
# SENTRY_PROJECT="your-sentry-project"


# -----------------------------------------------------------------------------
# Stripe Configuration (@repo/env/presets/stripe.ts, used in index.ts)
# -----------------------------------------------------------------------------

# Required if using Stripe: Your Stripe secret API key.
# Example: sk_test_xxxxxxxxxxxxxxxxxxxxxxxx or sk_live_xxxxxxxxxxxxxxxxxxxxxxxx
STRIPE_API_KEY="sk_test_YOUR_STRIPE_SECRET_KEY"

# Optional: Stripe webhook secret for verifying webhook events.
# STRIPE_WEBHOOK_SECRET="whsec_xxxxxxxxxxxxxxxxxxxxxxxx"

# Required if using Stripe: Price ID for your basic plan.
NEXT_PUBLIC_PRICE_ID_BASIC="price_YOUR_BASIC_PLAN_PRICE_ID"

# Required if using Stripe: Price ID for your premium plan.
NEXT_PUBLIC_PRICE_ID_PREMIUM="price_YOUR_PREMIUM_PLAN_PRICE_ID"


# -----------------------------------------------------------------------------
# Email Service (Resend) (@repo/env/email.ts)
# -----------------------------------------------------------------------------

# Required if using Resend: Your Resend API key.
# RESEND_KEY="re_xxxxxxxxxxxxxxxxxxxxxxx"

# Optional: Resend audience ID if you use Resend audiences.
# RESEND_AUDIENCE_ID="your_audience_id"

# -----------------------------------------------------------------------------
# File Storage (S3 Compatible) (@repo/env/file.ts)
# -----------------------------------------------------------------------------

# Optional: S3 compatible storage access key ID.
# S3_ACCESS_KEY_ID="your_s3_access_key_id"

# Optional: S3 compatible storage secret access key.
# S3_SECRET_ACCESS_KEY="your_s3_secret_access_key"

# Optional: S3 bucket name.
# S3_BUCKET="your-s3-bucket-name"

# Optional: S3 compatible storage endpoint URL.
# Example: https://s3.amazonaws.com or https://your-minio-instance.com
# S3_ENDPOINT="https://s3.region.amazonaws.com"

# Optional: Public access domain for the S3 bucket (if different from endpoint or using CDN).
# Example: https://cdn.yourdomain.com/your-s3-bucket-name
# S3_PUBLIC_DOMAIN=""
# Also available as NEXT_PUBLIC_S3_DOMAIN (client-side)
# NEXT_PUBLIC_S3_DOMAIN=""

# Optional: S3 bucket region.
# Example: us-east-1
# S3_REGION="us-west-1"

# Optional: Enable path-style access for S3 (set to "1" if true). Default is virtual-hosted style.
# S3_ENABLE_PATH_STYLE="0"

# Optional: Default S3 file path prefix within the bucket.
# NEXT_PUBLIC_S3_FILE_PATH="files"

# Optional: Expiration time in seconds for S3 presigned preview URLs. Default is 7200 (2 hours).
# S3_PREVIEW_URL_EXPIRE_IN="7200"

# Optional: Set ACL for uploaded S3 objects (set to "0" to disable). Default is true.
# S3_SET_ACL="1"


# -----------------------------------------------------------------------------
# OpenID Connect (OIDC) General Configuration (@repo/env/oidc.ts)
# -----------------------------------------------------------------------------

# Optional: Set to "1" to enable general OIDC features (e.g., session pre-sync header).
# ENABLE_OIDC="0"

# Optional: JWKS URI or inline key for OIDC token verification, if applicable.
# OIDC_JWKS_KEY=""


# -----------------------------------------------------------------------------
# Authentication Services (@repo/env/auth.ts)
# -----------------------------------------------------------------------------

# --- Clerk Auth ---
# To enable Clerk, set NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY.
# NEXT_PUBLIC_ENABLE_CLERK_AUTH will be true if NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY is set.

# Optional: Clerk publishable key (public).
# NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY="pk_test_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"

# Optional: Clerk secret key (server-side).
# CLERK_SECRET_KEY="sk_test_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"

# Optional: Clerk webhook secret for verifying webhooks (e.g., for DB sync).
# CLERK_WEBHOOK_SECRET="whsec_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"


# --- NextAuth.js / Auth.js ---
# Set to "1" to enable NextAuth.js features.
# NEXT_PUBLIC_ENABLE_NEXT_AUTH="0" # Set to "1" to enable

# Optional: Comma-separated list of enabled NextAuth.js SSO providers.
# Example: "github,google,auth0" Default: "auth0"
# NEXT_AUTH_SSO_PROVIDERS="github,google"

# Optional: Set to "1" or "true" to enable NextAuth.js debug logs.
# NEXT_AUTH_DEBUG="0"

# --- Auth0 (for NextAuth.js) ---
# AUTH0_CLIENT_ID="your_auth0_client_id"
# AUTH0_CLIENT_SECRET="your_auth0_client_secret"
# AUTH0_ISSUER="https://your-domain.auth0.com"

# --- GitHub (for NextAuth.js) ---
# GITHUB_CLIENT_ID="your_github_client_id"
# GITHUB_CLIENT_SECRET="your_github_client_secret"

# --- Azure AD (for NextAuth.js) ---
# AZURE_AD_CLIENT_ID="your_azure_ad_client_id"
# AZURE_AD_CLIENT_SECRET="your_azure_ad_client_secret"
# AZURE_AD_TENANT_ID="your_azure_ad_tenant_id"

# --- Authentik (for NextAuth.js) ---
# AUTHENTIK_CLIENT_ID="your_authentik_client_id"
# AUTHENTIK_CLIENT_SECRET="your_authentik_client_secret"
# AUTHENTIK_ISSUER="https://your-authentik-instance.com/application/o/your-provider/"

# --- Authelia (for NextAuth.js) ---
# AUTHELIA_CLIENT_ID="your_authelia_client_id"
# AUTHELIA_CLIENT_SECRET="your_authelia_client_secret"
# AUTHELIA_ISSUER="https://your-authelia-instance.com"

# --- Cloudflare Zero Trust (for NextAuth.js) ---
# CLOUDFLARE_ZERO_TRUST_CLIENT_ID=""
# CLOUDFLARE_ZERO_TRUST_CLIENT_SECRET=""
# CLOUDFLARE_ZERO_TRUST_ISSUER="" # e.g., https://your-team-name.cloudflareaccess.com

# --- Generic OIDC (for NextAuth.js) ---
# GENERIC_OIDC_CLIENT_ID=""
# GENERIC_OIDC_CLIENT_SECRET=""
# GENERIC_OIDC_ISSUER=""

# --- Zitadel (for NextAuth.js) ---
# ZITADEL_CLIENT_ID="your_zitadel_client_id@projectname"
# ZITADEL_CLIENT_SECRET="your_zitadel_client_secret"
# ZITADEL_ISSUER="https://your-zitadel-instance.com"

# --- Logto (for NextAuth.js) ---
# LOGTO_CLIENT_ID=""
# LOGTO_CLIENT_SECRET=""
# LOGTO_ISSUER="" # e.g., https://your-logto-cloud-instance.logto.app/oidc
# LOGTO_WEBHOOK_SIGNING_KEY="" # Optional for Logto webhooks

# --- Casdoor (for NextAuth.js) ---
# CASDOOR_WEBHOOK_SECRET="" # Optional for Casdoor webhooks


# -----------------------------------------------------------------------------
# Analytics Services (@repo/env/analytics.ts)
# -----------------------------------------------------------------------------

# --- Plausible Analytics ---
# To enable, set PLAUSIBLE_DOMAIN.
# PLAUSIBLE_DOMAIN="yourdomain.com"
# PLAUSIBLE_SCRIPT_BASE_URL="https://plausible.io" # Default, override if self-hosting

# --- PostHog Analytics ---
# To enable, set POSTHOG_KEY.
# POSTHOG_KEY="phc_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
# POSTHOG_HOST="https://app.posthog.com" # Default, override if self-hosting
# DEBUG_POSTHOG_ANALYTICS="0" # Set to "1" to enable debug mode for PostHog

# --- Umami Analytics ---
# To enable, set UMAMI_WEBSITE_ID.
# UMAMI_WEBSITE_ID="your_umami_website_id"
# UMAMI_SCRIPT_URL="https://analytics.umami.is/script.js" # Default, override if self-hosting

# --- Microsoft Clarity Analytics ---
# To enable, set CLARITY_PROJECT_ID.
# CLARITY_PROJECT_ID="your_clarity_project_id"

# --- Vercel Analytics ---
# ENABLE_VERCEL_ANALYTICS="0" # Set to "1" to enable (often auto-enabled by Vercel integration)
# DEBUG_VERCEL_ANALYTICS="0" # Set to "1" to enable debug mode

# --- Google Analytics ---
# To enable, set GOOGLE_ANALYTICS_MEASUREMENT_ID.
# GOOGLE_ANALYTICS_MEASUREMENT_ID="G-XXXXXXXXXX"

# --- React Scan Monitor ---
# Optional: API Key for React Scan Monitor dashboard.
# REACT_SCAN_MONITOR_API_KEY=""


# -----------------------------------------------------------------------------
# Server Database Configuration (@repo/env/db.ts)
# -----------------------------------------------------------------------------

# Optional: Specify service mode. 'server' enables server-side database features.
# Client-side NEXT_PUBLIC_ENABLED_SERVER_SERVICE is derived from this.
# NEXT_PUBLIC_SERVICE_MODE="" # "server" or "" (empty for client/hybrid mode)

# Optional: Database driver type ('neon' or 'node'). Default is 'neon'.
# DATABASE_DRIVER="neon"

# Optional: Specific database URL for running tests.
# DATABASE_TEST_URL=""

# Optional: Secret key for encrypting sensitive data in the database (e.g., API keys).
# Generate with `openssl rand -base64 32`. Required if NEXT_PUBLIC_SERVICE_MODE=server and you store encrypted data.
# KEY_VAULTS_SECRET="your_database_encryption_key_here"

# Optional: Set to "0" to disable removal of global files (if applicable to your setup). Default is true (files can be removed).
# REMOVE_GLOBAL_FILE="1"

# -----------------------------------------------------------------------------
# Upstash Redis (Example Preset - if you use it directly beyond REDIS_CLIENT)
# -----------------------------------------------------------------------------
# These are often used if you integrate with Upstash SDKs directly,
# separate from a generic REDIS_CLIENT URL.
# UPSTASH_REDIS_REST_URL="https://<your-upstash-instance>.upstash.io"
# UPSTASH_REDIS_REST_TOKEN="<your-upstash-rest-token>"




# .env.example
# Email Configuration for @acme/email package
# -----------------------------------------------------------------------------
# Copy this file to .env (if not in version control) or .env.local
# and fill in your actual credentials.
#
# IMPORTANT: .env or .env.local should typically be in your .gitignore file
# to prevent committing secrets to your repository.
# -----------------------------------------------------------------------------

# --- Common Email Settings ---
# Choose your email provider: "resend", "nodemailer", "ses", "custom", or "test" (if implemented)
EMAIL_PROVIDER="ses"

# The 'From' address for outgoing emails.
# IMPORTANT: This email address MUST be verified with your chosen email provider (Resend, AWS SES, etc.)
# For AWS SES, this could be a verified domain (e.g., "MyApp <noreply@verified-domain.com>")
# or a verified email address.
EMAIL_FROM="noreply@example.com"

# --- Recipient for Test Email Script ---
# Used by `pnpm test:email` in packages/email to send a test message.
# TEST_EMAIL_RECIPIENT="your-test-address@example.com"


# --- Resend Configuration (if EMAIL_PROVIDER="resend") ---
# Your Resend API key (starts with "re_")
# RESEND_KEY=""
# Optional: Resend audience ID for adding contacts to a specific list
# RESEND_AUDIENCE_ID=""


# --- Nodemailer (Generic SMTP) Configuration (if EMAIL_PROVIDER="nodemailer") ---
# Use this for any SMTP provider (e.g., Postmark SMTP, Mailgun SMTP, SendGrid SMTP, self-hosted SMTP).
# SMTP_HOST="smtp.example.com"
# SMTP_PORT="587" # Common ports: 587 (TLS/STARTTLS), 465 (SSL), 25, 2525
# SMTP_USER="your-smtp-username" # Often an API key or specific username
# SMTP_PASS="your-smtp-password" # Often an API key or specific password
# SMTP_SECURE="false" # true for port 465 (SSL), false for port 587 (STARTTLS). Nodemailer defaults to false and tries STARTTLS if available.


# --- AWS SES Configuration (if EMAIL_PROVIDER="ses") ---
# The AWS region where your SES service is configured (e.g., "us-east-1", "eu-west-2")
# AWS_SES_REGION=""

# AWS Access Key ID and Secret Access Key for an IAM user with SES permissions.
# These are NOT required if your application is running on AWS infrastructure (EC2, Lambda, ECS, Fargate)
# with an IAM role that has `ses:SendEmail` permissions, as the AWS SDK can automatically pick up credentials.
# Required for local development or deployments outside of AWS.
# AWS_SES_ACCESS_KEY_ID=""
# AWS_SES_SECRET_ACCESS_KEY=""

# Optional: AWS SES Configuration Set name.
# Highly recommended for production to track bounces, complaints, deliveries, etc.
# AWS_SES_CONFIGURATION_SET_NAME=""

# Optional: The ARN of the identity (domain or email address) that is associated with the sending authorization policy.
# Used for scenarios like cross-account sending or when using sending authorization policies.
# AWS_SES_FROM_ARN=""
# Example: arn:aws:ses:us-east-1:123456789012:identity/example.com


# --- Custom Provider Configuration (if EMAIL_PROVIDER="custom") ---
# Add any environment variables required by your custom email provider implementation.
# CUSTOM_EMAIL_API_KEY=""
# CUSTOM_EMAIL_ENDPOINT=""

# Note: For the "test" provider (if implemented for local testing without sending real emails),
# no specific environment variables might be needed beyond EMAIL_PROVIDER="test".



# Bots protection
# NEXT_PUBLIC_RECAPTCHA_SITE_KEY
# KNOCK_SECRET_API_KEY=""
